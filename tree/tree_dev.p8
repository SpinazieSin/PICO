pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
-- default function
function _init()
 -- global settings
 player_speed = 1
 background_color = 12
 use_alternative_pallet = true

 -- gametime
 gt = 0

 -- camera
 cx = 0
 cy = 0

 -- buttons
 lb, rb, ub, db = false, false, false ,false

 -- branches
 branches = {}
 make_branch(10, 10, 0, 0.25, 0)

 -- player
 plr = make_player(0, 0)

 -- objects
 objs = {}

 -- map
 map(0, 0)

 -- alternative pallet
 -- poke(0x5f2e, 1)
 if use_alternative_pallet then
  for i in all({1,2,3,4,5,6,12,14}) do
   pal(i, 128+i, 1)
  end
 end
end

--
function _update()
 -- update gametime
 gt = gt + 1

 -- update buttons
 update_buttons()

 -- update player
 plr:update()

 branch_factor = 3
 maxangle = 200
 maxangle2 = maxangle/2
 minspeed = 5
 minlen = 40
 maxlen = 20
 
 -- update branches
 for branch in all(branches) do
  branch:update()

  -- only unsprouted, complete branches may sprout
  if branch.sprouted == 0 and branch.complete then
   local plr_close = false
   if abs(plr.x - branch.xc) + abs(plr.y - branch.yc) < 10 then
    plr_close = true
   end

   -- check branch prob
   if plr_close then
    local n_branches = flr(rnd(branch_factor)+1)
    branch.sprouted = n_branches
    for i=0,n_branches do
     make_branch(branch.xn, branch.yn, rnd(maxlen)+10, branch.angle+(rnd(maxangle)-maxangle2)/1000, rnd(minspeed)/minspeed)
    end
   end
  end
 end
end

--
function _draw()
 cls()
 map(0, 0)
 
 for branch in all(branches) do
  branch:draw()
 end

 plr:draw()
end

-->8
function make_player()
 local plr = {
  x = 50,
  y = 40,
  speed = 1,
  left = false,
  -- anim_state gives the index of the anim_spr to use
  anim_state = 1,
  anim_index = 2,
  -- anim_spr = {anim_speed, sprite index1, etc...}
  anim_spr = {{3, 65},
              {3, 66, 67, 68, 69, 70, 71}},
  
  update = function(self)
  
   -- parameters
   local anim_state = 1
   local moving = false
   local dx = 0
   local dy = 0
   local speed = self.speed

   -- movement
   if ub then
    dy =-speed
   end
   if db then
    dy = speed
   end
   if lb then
    dx =-speed
    self.left = true
   end
   if rb then
    dx = speed
    self.left = false
   end

   -- animations
   if abs(dx) > 0 or abs(dy) > 0 then
    moving = true
   end
   if moving then
    anim_state = 2
   end

   -- update character
   self.anim_state = anim_state
   self.x = self.x + dx
   self.y = self.y + dy
   update_camera(self.x, self.y)
  end,

  draw = function(self)
   -- animations
   local anim_state = self.anim_state
   local anim_index = self.anim_index
   local anim_spr = self.anim_spr[anim_state]
   local anim_speed = anim_spr[1]

   -- increment animation
   if gt % anim_speed == 0 then
    anim_index = anim_index + 1
   end

   -- reset animation
   if anim_index > #anim_spr then
    anim_index = 2
   end
   self.anim_index = anim_index

   -- select sprite
   local spr_number = anim_spr[anim_index]

   -- draw the sprite
   spr(spr_number, self.x, self.y, 1, 1, self.left)
  end
 }
 return plr
end

-->8
function update_buttons()
 lb, rb, ub, db = false, false, false, false
 if btn(0) then
  lb = true
 end
 if btn(1) then
  rb = true
 end
 if btn(2) then
  ub = true
 end
 if btn(3) then
  db = true 
 end
end

function update_camera(x, y)
 if x < 60 then
  x = 60
 end
 if y < 60 then
  y = 60
 end
 camera(x-60, y-60)
end

-->8
-- branch code
function make_branch(x0, y0, len, angle, speed)
 local xn = x0-len*sin(angle)
 local yn = y0-len*cos(angle)
 add(branches, {
  col = 4, -- color
  speed = speed, -- growth speed
  angle = angle,
  spr = rnd(5)+74,
  x0 = x0, -- x init
  y0 = y0, -- y init
  xc = x0, -- x current
  yc = y0, -- y current
  xn = xn, -- x final
  yn = yn, -- y final
  dx = (xn - x0)/len, -- x interpolation
  dy = (yn - y0)/len, -- y interpolation
  complete = false, -- done drawing
  stop = false, -- stops growing
  sprouted = 0, -- amount of sprouted branches
  
  -- update
  update = function(self)
   -- is branch fully grown?
   if not complete then
    if abs(self.xc - self.xn) < abs(self.dx*2) and
       abs(self.yc - self.yn) < abs(self.dy*2) then
     self.xc = self.xn
     self.yc = self.yn
     self.complete = true
     self.stop = true
    end
   end

   -- growing
   if not self.stop then
    self.xc = self.xc + self.dx*self.speed
    self.yc = self.yc + self.dy*self.speed
   end
  end,

  -- draw
  draw = function(self)
   spr(self.spr, self.x0, self.y0)
   line(self.x0, self.y0, self.xc, self.yc, self.col)
  end
  })
end


__gfx__
00000000000000000000000000004444400000000000000400000000000000000000000440000000000000000000000400000000000000000000000044444444
00000000000000000000000000004444400000000000000400000000000000000000004444000000000000000000004400000000000000000000000044444444
00000000000000000000000000004444440000000000004400000004400000000000044444400000000000000000444400000000000000000000000044444444
00000000000000000000000000004444440000000000004400000004400000000000444444440000000000000444444400000000000000000000000044444444
00000000000000004444444400004444444000000000044400000044440000000004444444444000000000444444444400000000000000000000000044444444
00000000000000004444444400004444444000000000044400000444444000000044444444444400000044444444444400000000000000000000000044444444
00000000000000004444444400004444444400000000444400004444444400000444444444444440004444444444444400000000000000000000000044444444
00000000000000004444444400004444444400000000444400444444444444004444444444444444444444444444444400000000000000000000000044444444
00000000000000004444444444440000444400000000444400000044440000000000000000000000400000000000000000000000000000000000000000000000
00000000000000004444444444440000444440000004444400004444444400000000000000000000440000000000000000000000000000000000000000000000
00000000000000004444444444440000444440000004444400044444444440000000000000000000444400000000000000000000000000000000000000000000
00000000000000004444444444440000444440000004444400444444444444000000000000000000444444400000000000000000000000000000000000000000
00000000000000000000000044440000444444000044444404444444444444400000000000000000444444444400000000000000000000000000000000000000
60606060606060600000000044440000444444000044444404444444444444400000000000000000444444444444000000000000000000000000000000000000
00000000000000000000000044440000444444400444444444444444444444440000000000000000444444444444440000000000000000000000000000000000
06060606060606060000000044440000444444444444444444444444444444440000000000000000444444444444444400000000000000000000000000000000
0000000000000000dddddddd0dddd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6060606060606060dddddddd00dd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600060006000600dddddddddddddd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6060606060606060ddddddddddddddd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f060f060f060f06dddddddd0dddddd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6060606060606060ddddddddddddddd0000000000000d000000000ddddddddddddddddddddddd000000000000000000000000000000000000000000000000000
060f060f060f060fddddddddddddddd00000000000ddddd000000d0d0d000d0000000d000d0d0d00000000000000000000000000000000000000000000000000
f0f6f0f6f0f6f0f6dddddddd0dddddd0000000000000d0000000d00dd00000d00000d00000dd00d000000d000000000000000000000000000000000000000000
000f000f000f000fffffffffddddddd00000000000ddddd0000d000d0000000d000d0000000d000d0000ddd00000000000000000000000000000000000000000
f6f6f6f6f6f6f6f6ffffffffddddddd0000000000000d00000d0000d00000000d0d00000000d0000d000ddd00000000000000000000000000000000000000000
f0f0f0f0f0f0f0f0ffffffff0dddddd0000000dd0000d00000d000ddd00000000d00000000ddd000d0000d000000000000000000000000000000000000000000
6f6f6f6f6f6f6f6fffffffffddddddddd000dddddd00d0000ddddddddddddddddddddddddddddddddd000d000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0fffffffffddddddddd000ddddddddddddd00dd00d00ddd00d00ddd00d00ddd000d0d00d000000000000000000000000000000000000000000
6fff6fff6fff6fffffffffffddddddddd00ddddddddddddd000d000d000d000d000d000d000d0000ddddddd00000000000000000000000000000000000000000
ffffffffffffffffffffffffddddddddddddddddddddddddddddd00d00ddd00d00ddd00d00ddd000dddddddd0000000000000000000000000000000000000000
ffffffffffffffffffffffffdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd0000000000000000000000000000000000000000
00000000000000000055550000555500005555000055550000000000000000000000000000000000000000440044400000004000000000000000000000000000
00000000005555000551e1500551e1500551e1505551e15550555505005555000000000000000000000000400044400000044000400000040000000000000000
000000000551e15005eeee5005eeee5005eeee5000eeee000551e1500551e1500000000000444400000004404444440000040000440004440000000000000000
0000000050eeee050009aa000009aa000009aa000009aa0000eeee0050eeee050000000044444444000044000444400000440000044044400000000000000000
000000000009aa0000e0aae000e0aae000e0aae000e0aae00009aa000009aa000000000044444444000040000004400044444000044044000000000000000000
00000000000eaa0008899988089999980899999800999990000eaa00000eaa000000000004444000000040000004400004000000040044000000000000000000
00000000009999900088088000000000000000000080008000999990009999900000000000000000000040000004444004000000044400000000000000000000
00000000000808000000000000000000000000000000000000080800000080000000000000000000000040000004400004000000444000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000440000000000000000040000000440000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000004400000000000400000040000004400000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000004440440000440000000004000000444000044400000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000044444444000440000000040000004444440044000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000044444444000440000000400000004440044444440000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000004404440004440000044400000044400040040000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000044000000040400000040000004440000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000040000000040400000040000044400000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004440000000000004000004444444000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000444000000044004400004444444444000000
00000000000000000000000000000000000000000000000000000000000000000000000000400000000000444444444000000044004400004444444440444000
00000000000000000000000000000000000000000000000000000000000000000000000044444444000044440004440000004440000440004444444440000444
00000000000000000000000000000000000000000000000000000000000000000000000044444444000444000444440000444400000440004444440044000000
00000000000000000000000000000000000000000000000000000000000000000000000000004000000440004444400000004400000040004444044404440000
00000000000000000000000000000000000000000000000000000000000000000000000000000000004000000004000000044000000044004444000400044440
00000000000000000000000000000000000000000000000000000000000000000000000000000000444000000004000000440000000004004444000400000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000004400004400040000000000440004444400000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000044000004444044400000000440000444440000000000
00000000000000000000000000000000000000000000000000000000000000000000000044000004000040000044444404440000400440000444444400000000
00000000000000000000000000000000000000000000000000000000000000000000000044444444444444000044444004440000444444000044404444440000
00000000000000000000000000000000000000000000000000000000000000000000000044444444444040000444440000444044000444000044400044444400
00000000000000000000000000000000000000000000000000000000000000000000000000000000004440000444444400044044000040000044400000444400
00000000000000000000000000000000000000000000000000000000000000000000000000000000000440000444444000004444000040000044000000004440
00000000000000000000000000000000000000000000000000000000000000000000000000000000000440000004440000004440000040000040000000000000
__map__
6e6f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7e7f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
